---
version: 2.1

orbs:
  win: circleci/windows@5.0.0

executors:
  linux-x86_64:
    docker:
      - image: cimg/rust:1.82.0
  linux-aarch64:
    resource_class: arm.medium
    docker:
      - image: cimg/rust:1.82.0
  macos:
    macos:
      xcode: 16.1.0
  github:
    docker:
      - image: cibuilds/github:0.10

jobs:
  test:
    executor: linux-x86_64
    steps:
      - checkout
      - run:
          name: Prepare environment
          command: |
            cargo install cargo2junit
            mkdir -p test-results
      - run:
          name: Executing tests
          command: RUSTC_BOOTSTRAP="1" cargo test --no-fail-fast -- -Z unstable-options --format json --report-time | cargo2junit > test-results/test-results.xml
      - store_test_results:
          path: test-results
  build-linux-x86_64:
    executor: linux-x86_64
    steps:
      - checkout
      - run:
          name: Build
          command: |
            cargo build --release
            mv target/release/live-qso-map target/release/live_qso_map-linux-x86_64
      - persist_to_workspace:
          root: target/release
          paths:
            - live_qso_map-linux-x86_64
  build-linux-aarch64:
    executor: linux-aarch64
    steps:
      - checkout
      - run:
          name: Build
          command: |
            cargo build --release
            mv target/release/live-qso-map target/release/live_qso_map-linux-aarch64
      - persist_to_workspace:
          root: target/release
          paths:
            - live_qso_map-linux-aarch64
  build-macos:
    executor: macos
    steps:
      - checkout
      - run:
          name: Install Rust
          command: |
            curl -o rustup https://sh.rustup.rs
            bash rustup -y
      - run:
          name: Build
          command: |
            cargo build --release
            mv target/release/live-qso-map target/release/live_qso_map-macos
      - persist_to_workspace:
          root: target/release
          paths:
            - live_qso_map-macos
  build-windows-x64:
    executor: win/server-2022
    steps:
      - checkout
      - run:
          name: Install Rust
          command: |
            curl -o rustup https://sh.rustup.rs
            bash rustup -y
            rustup target add x86_64-pc-windows-msvc
      - run:
          name: Build
          command: |
            cargo build --release --target=x86_64-pc-windows-msvc
            mv target/release/live-qso-map target/release/live_qso_map-windows-x64
      - persist_to_workspace:
          root: target/release
          paths:
            - live_qso_map-windows-x64
  store-artifacts:
    executor: linux-x86_64
    steps:
      - attach_workspace:
          at: /workspace
      - store_artifacts:
          path: /workspace
  publish-github-release:
    executor: github
    steps:
      - attach_workspace:
          at: ./workspace
      - run: ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./workspace/

workflows:
  test_and_build:
    jobs:
      - test:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - build-linux-x86_64:
          requires:
            - test
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - build-linux-aarch64:
          requires:
            - test
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - build-macos:
          requires:
            - test
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - build-windows-x64:
          requires:
            - test
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - store-artifacts:
          requires:
            - build-linux-x86_64
            - build-linux-aarch64
            - build-macos
            - build-windows-x64
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
